AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-list-aws

  Application TODO-LIST with SAM format

# Parameters
Parameters:
  Stage:
    Type: String
    Default: default
    AllowedValues:
      - default
      - staging
      - production
    Description: Enter staging or production. Default is default  

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        DYNAMODB_TABLE: !Ref TodosDynamoDbTable
        ENDPOINT_OVERRIDE: ""
    
Resources:
  # Bucket S3 para almacenar artefactos de funciones Lambda
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Stage}-todo-list-aws-artifacts"

  # Función Lambda para crear TODO
  CreateTodoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LabRole"
      Handler: create.create
      Runtime: python3.10
      Events:
        Create:
          Type: Api
          Properties:
            Path: /todos
            Method: post

  # Función Lambda para listar TODOs
  ListTodosFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LabRole"
      Handler: list.list
      Runtime: python3.10
      Events:
        Create:
          Type: Api
          Properties:
            Path: /todos
            Method: get

  # Función Lambda para obtener un TODO
  GetTodoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LabRole"
      Handler: get.get
      Runtime: python3.10
      Events:
        Create:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: get

  # Función Lambda para actualizar un TODO
  UpdateTodoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LabRole"
      Handler: update.update
      Runtime: python3.10
      Events:
        Create:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: put

  # Función Lambda para eliminar un TODO
  DeleteTodoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LabRole"
      Handler: delete.delete
      Runtime: python3.10
      Events:
        Create:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: delete
            
  # Tabla DynamoDB para almacenar los TODOs
  TodosDynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Sub "${Stage}-TodosDynamoDbTable"
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  # ServerlessRestApi es una API creada implícitamente a partir de las funciones Lambda
  BaseUrlApi:
    Description: "Base URL of API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"

  CreateTodoApi:
    Description: "API Gateway endpoint URL for ${opt:stage} stage for Create TODO"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos/"

  ListTodosApi:
    Description: "API Gateway endpoint URL for ${opt:stage} stage for List TODO"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos"

  GetTodoApi:
    Description: "API Gateway endpoint URL for ${opt:stage} stage for Get TODO"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos/{id}"

  UpdateTodoApi:
    Description: "API Gateway endpoint URL for ${opt:stage} stage for Update TODO"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos/{id}"

  DeleteTodoApi:
    Description: "API Gateway endpoint URL for ${opt:stage} stage for Delete TODO"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos/{id}"


